<Window x:Class="VideoPlayerView.VideoElement"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:util="clr-namespace:Common.Util;assembly=Common"
        xmlns:VideoPlayer="clr-namespace:VideoPlayer;assembly=VideoPlayer"
        xmlns:sw="clr-namespace:WpfStyleableWindow.StyleableWindow"
        ShowInTaskbar="True"
        FocusManager.FocusedElement="{Binding ElementName=videoplayer}"
         FontFamily="Trebuchet MS"    FontSize="12" Topmost="False"
        Style="{DynamicResource CustomWindowStyle2}" AllowDrop="True"
        ContextMenu="{DynamicResource VideoContextMenu}"
        Title="MainWindow" WindowStartupLocation="Manual"
             Width="620" Height="500" MinWidth="320" 
        MinHeight="400" HorizontalContentAlignment="Stretch">


    <Window.Resources>

        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/VideoPlayer;component/Themes/Generic.xaml"/>
            </ResourceDictionary.MergedDictionaries>


            <Style TargetType="{x:Type VideoPlayer:PlaylistView}">
            <Style.Triggers>
                <Trigger  Value="Collapsed"  Property="util:MediaControlExtension.FileexpVisiblity">
                    <Trigger.EnterActions>
                        <BeginStoryboard x:Name="Current1">
                            <Storyboard>
                                <DoubleAnimation Duration="0:0:0.200" To="0" From="240" Storyboard.TargetProperty="Width" />

                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <RemoveStoryboard BeginStoryboardName="Current1"/>
                    </Trigger.ExitActions>
                </Trigger>

                <Trigger Property="util:MediaControlExtension.FileexpVisiblity" Value="Visible">

                    <Trigger.EnterActions>
                        <BeginStoryboard x:Name="Current2">
                            <Storyboard>
                                <DoubleAnimation Duration="0:0:0.300" To="240" From="0" Storyboard.TargetProperty="Width" />

                            </Storyboard>

                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <RemoveStoryboard BeginStoryboardName="Current2"/>
                    </Trigger.ExitActions>
                </Trigger>

            </Style.Triggers>
        </Style>
        
        <ControlTemplate x:Key="CustomWindowTemplate" TargetType="{x:Type Window}">
            <Grid Background="{StaticResource WindowBackColor}">
                <Border Grid.Row="1" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" >
                    <DockPanel>
                        <VideoPlayer:PlaylistView Focusable="False" Cursor="Arrow" x:Name="playlistview" Width="10" Grid.Column="1"  DockPanel.Dock="Right" 
                                                  Margin="0,0,0,0"  />
                        <DockPanel LastChildFill="True" Grid.Column="0">
                            <Grid Background="{TemplateBinding Background}">
                                <AdornerDecorator>
                                    <ContentPresenter x:Name="WindowContent"/>
                                </AdornerDecorator>
                                <ResizeGrip  x:Name="WindowResizeGrip" HorizontalAlignment="Right" IsTabStop="false" Visibility="Collapsed" VerticalAlignment="Bottom"/>
                            </Grid>
                        </DockPanel>
                    </DockPanel>

                </Border>
                <Thumb Background="Transparent" x:Name="ThumbTop" Height="4" Margin="14,0" VerticalAlignment="Top" Cursor="SizeNS"  Opacity="0" sw:WindowResizeBehavior.TopResize="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"/>
                <Thumb Background="Transparent" x:Name="ThumbTopLeft" Height="5" Width="5" VerticalAlignment="Top" HorizontalAlignment="Left" Cursor="SizeNWSE"  Opacity="0" sw:WindowResizeBehavior.TopLeftResize="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"/>
                <Thumb Background="Transparent" x:Name="ThumbBottom" Height="4" Margin="14,0" VerticalAlignment="Bottom" Cursor="SizeNS" Opacity="0" sw:WindowResizeBehavior.BottomResize="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"/>
                <Thumb Background="Transparent" x:Name="ThumbTopRight" Height="5" Width="5" VerticalAlignment="Top" HorizontalAlignment="Right" Cursor="SizeNESW"  Opacity="0" sw:WindowResizeBehavior.TopRightResize="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"/>
                <Thumb Background="Transparent" x:Name="ThumbRight" HorizontalAlignment="Right" Margin="0,14" Width="4" Cursor="SizeWE"  Opacity="0" sw:WindowResizeBehavior.RightResize="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"/>
                <Thumb Background="Transparent" x:Name="ThumbBottomRight" Height="5" Width="5" VerticalAlignment="Bottom" HorizontalAlignment="Right" Cursor="SizeNWSE"  Opacity="0" sw:WindowResizeBehavior.BottomRightResize="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"/>
                <Thumb Background="Transparent" x:Name="ThumbLeft" HorizontalAlignment="Left" Margin="0,14" Width="4" Cursor="SizeWE"  Opacity="0" sw:WindowResizeBehavior.LeftResize="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"/>
                <Thumb Background="Transparent" x:Name="ThumbBottomLeft" Height="5" Width="5" VerticalAlignment="Bottom" HorizontalAlignment="Left" Cursor="SizeNESW"  Opacity="0" sw:WindowResizeBehavior.BottomLeftResize="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"/>
                <Grid.Effect>
                    <DropShadowEffect   Direction="315" ShadowDepth="1.1" Color="Red" BlurRadius="0" Opacity=".8"/>
                </Grid.Effect>
            </Grid>



            <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter TargetName="playlistview" Property="Cursor" Value="Arrow"/>
                    </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="ResizeMode" Value="CanResizeWithGrip"/>
                        <Condition Property="WindowState" Value="Normal"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Visibility" TargetName="WindowResizeGrip" Value="Visible"/>
                </MultiTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style x:Key="CustomWindowStyle2" TargetType="{x:Type Window}">
            <Setter Property="WindowStyle" Value="None"/>
            <Setter Property="AllowsTransparency" Value="True"/>
            <Setter Property="MinWidth" Value="200"/>
            <Setter Property="MinHeight" Value="46"/>
            <!--CaptionHeight + ResizeBorderThickness * 2-->
            <Setter Property="Background" Value="Yellow"/>
            <Setter Property="BorderBrush" Value="Green"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="DarkRed"/>
            <Setter Property="Template" Value="{StaticResource CustomWindowTemplate}"/>
        </Style>
        <Style TargetType="Button">
            <Setter Property="Focusable" Value="False"/>
        </Style>

        <sw:WindowMinimizeCommand x:Key="MinimizeCommand"></sw:WindowMinimizeCommand>
            <sw:WindowMaximizeCommand x:Key="MaximizeCommand"></sw:WindowMaximizeCommand>
            <sw:WindowCloseCommand x:Key="CloseCommand"></sw:WindowCloseCommand>
        </ResourceDictionary>
    </Window.Resources>
    <Grid Background="Black" x:Name="_videoContent" >
          <!-- sw:WindowDragBehavior.LeftMouseButtonDrag="{Binding
        RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}">
       <VideoPlayer:PlaylistView x:Name="plv" Width="10" DockPanel.Dock="Right" Margin="0,32,0,0"  />-->

        <MediaElement x:Name="MediaElementPlayer" 
                      HorizontalAlignment="Stretch"
                      VerticalAlignment="Stretch"
                      LoadedBehavior="Manual"  
                      Volume=".1" />

        <VideoPlayer:SubtitleMediaController  VerticalAlignment="Stretch" x:Name="videoplayer"/>

        <Border x:Name="WindowsTab" VerticalAlignment="Top" 
                sw:WindowDragBehavior.LeftMouseButtonDrag="{Binding
        RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                >
            <Border.Background>
                <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox"
                                     StartPoint="0.5,0">
                    <GradientStop Color="Transparent"/>
                    <GradientStop Color="#7F000000"/>
                </LinearGradientBrush>
            </Border.Background>
            <DockPanel LastChildFill="True" Background="Transparent" x:Name="WindowsTabDock">
                <Button HorizontalAlignment="Left" VerticalAlignment="Top" 
                          DockPanel.Dock="Left" Margin="10" 
                          Width="32" >
                    <Button.Style>
                        <Style TargetType="Button" >
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Button">
                                        <Border  SnapsToDevicePixels="True" 
                                                                x:Name="border" 
                                                                Width="{TemplateBinding Width}" 
                                                                Height="{TemplateBinding Height}">
                                            <Image x:Name="contentPresenter" Margin="0" 
                                                   SnapsToDevicePixels="True"
                                 Source="/VirtualizingListView;component/Resources/Images/video-player.png"  />
                                        </Border>

                                        <ControlTemplate.Triggers>
                                           
                                            <Trigger Property="IsDefaulted" Value="true">
                                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                            </Trigger>
                                            <Trigger Property="IsMouseOver" Value="true">
                                                <Setter Property="Opacity" Value="1"  TargetName="contentPresenter"/>
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="true">
                                                <Setter Property="LayoutTransform" TargetName="contentPresenter">
                                                    <Setter.Value>
                                                        <ScaleTransform ScaleX=".8" ScaleY="0.8"/>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="false">
                                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.3"/>
                                                <!--<Setter Property="Background" TargetName="border" Value="#FF18170D"/>
                                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>-->
                                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Button.Style>
                </Button>
                <DockPanel Grid.Column="3" DockPanel.Dock="Right" Margin="0,0,5,0" Background="Transparent">
                    <Button DockPanel.Dock="Right" Width="40" ToolTip="Close" Height="32" 
                            Command="{StaticResource CloseCommand}" 
                            CommandParameter="{Binding RelativeSource=
                        {RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource CloseStyle}">
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="Foreground" Value="White"/>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter Property="Focusable" Value="False"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button  DockPanel.Dock="Left" Height="32"  Width="40" ToolTip="Minimize"  Command="{StaticResource MinimizeCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource minbtn}">
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="Focusable" Value="False"/>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button Background="Transparent" DockPanel.Dock="Right" 
                            Width="40" Height="32" Style="{StaticResource normbtn}"  
                            Command="{StaticResource MaximizeCommand}" 
                            CommandParameter="{Binding RelativeSource
                        ={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}">
                    </Button>
                </DockPanel>
                <TextBlock  Name="TitleName"  FontSize="13" 
                                    util:MediaControlExtension.WindowsTitleBoard="True"
                                    Padding="3" Foreground="White" TextTrimming="CharacterEllipsis" 
                                    Background="Transparent" Height="20"/>
            </DockPanel>
          
            <Border.Style>
                <Style>
                    <Style.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Value="True"  Property="util:MediaControlExtension.AnimateWindowsTab"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard x:Name="Current3">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:.2"  To="1" Storyboard.TargetProperty="Opacity"/>
                                        <!--<ObjectAnimationUsingKeyFrames BeginTime="0:0:0" Duration="0:0:1" Storyboard.TargetProperty="Visibility">
                                        <DiscreteObjectKeyFrame KeyTime="0">
                                            <DiscreteObjectKeyFrame.Value>
                                                <Visibility >Collapsed</Visibility>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>-->
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard >
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:1" To="0" Storyboard.TargetProperty="Opacity"/>
                                        <!--<ObjectAnimationUsingKeyFrames Duration="0:0:5" Storyboard.TargetProperty="Visibility">
                                        <DiscreteObjectKeyFrame KeyTime="2">
                                            <DiscreteObjectKeyFrame.Value>
                                                <Visibility>Visible</Visibility>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>-->
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
        </Border>

        <Button DockPanel.Dock="Right"  Width="40" Height="30"  Visibility="{Binding FullScreenBtn}"  
                HorizontalAlignment="Right" ToolTip="Close"   VerticalAlignment="Top" 
                Command="{StaticResource CloseCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}">
            <Button.Style>
                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource CloseStyle}">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="Red"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
       
    </Grid>
    
</Window>
