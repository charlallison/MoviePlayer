<Window x:Class="VideoPlayerView.VideoElement"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:util="clr-namespace:Common.Util;assembly=Common"
        xmlns:cmd="clr-namespace:Common.ApplicationCommands;assembly=Common"
        xmlns:VideoPlayer="clr-namespace:VideoPlayer;assembly=VideoPlayer"
        xmlns:sw="clr-namespace:WpfStyleableWindow.StyleableWindow" 
        xmlns:wpf="clr-namespace:Meta.Vlc.Wpf;assembly=Meta.Vlc.Wpf"
        xmlns:VPVUtil="clr-namespace:VideoPlayerView.Util"
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        ShowInTaskbar="True"
        FocusManager.FocusedElement="{Binding ElementName=videoplayer}"
         FontFamily="Trebuchet MS"    FontSize="12" Topmost="False"
        Style="{StaticResource CustomWindowStyle2}" AllowDrop="True"
        
        Title="MainWindow" WindowStartupLocation="Manual"
             Width="620" Height="500" MinWidth="320" 
        MinHeight="400" HorizontalContentAlignment="Stretch">

    <!--ContextMenu="{DynamicResource VideoContextMenu}"-->
    <Window.Resources>

        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/VideoPlayer;component/Themes/Generic.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <x:Array Type="{x:Type system:String}" x:Key="VlcOptions">
                <system:String>-I</system:String>
                <system:String>--dummy-quiet</system:String>
                <system:String>--ignore-config</system:String>
                <system:String>--no-video-title</system:String>
                <system:String>--no-sub-autodetect-file</system:String>
            </x:Array>
            <Style TargetType="Button">
                <Setter Property="Focusable" Value="False"/>
            </Style>
            <VPVUtil:TrackListConverter x:Key="TrackListConverter" />
            <Style TargetType="{x:Type VideoPlayer:PlaylistView}">
            <Style.Triggers>
                <Trigger  Value="Collapsed"  Property="util:MediaControlExtension.FileexpVisiblity">
                    <Trigger.EnterActions>
                        <BeginStoryboard x:Name="Current1">
                            <Storyboard>
                                <DoubleAnimation Duration="0:0:0.200" To="0" From="240" Storyboard.TargetProperty="Width" />

                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <RemoveStoryboard BeginStoryboardName="Current1"/>
                    </Trigger.ExitActions>
                </Trigger>

                <Trigger Property="util:MediaControlExtension.FileexpVisiblity" Value="Visible">

                    <Trigger.EnterActions>
                        <BeginStoryboard x:Name="Current2">
                            <Storyboard>
                                <DoubleAnimation Duration="0:0:0.300" To="240" From="0" Storyboard.TargetProperty="Width" />

                            </Storyboard>

                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <RemoveStoryboard BeginStoryboardName="Current2"/>
                    </Trigger.ExitActions>
                </Trigger>

            </Style.Triggers>
        </Style>
        
       
        </ResourceDictionary>
    </Window.Resources>
    <Grid Background="Black" x:Name="_videoContent" sw:WindowDragBehavior.LeftMouseButtonDrag="{Binding
        RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}">
          <!-- sw:WindowDragBehavior.LeftMouseButtonDrag="{Binding
        RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"> LibVlcPath="..\..\..\LibVlc" 
       <VideoPlayer:PlaylistView x:Name="plv" Width="10" DockPanel.Dock="Right" Margin="0,32,0,0"  />-->
        <wpf:VlcPlayer x:Name="MediaElementPlayer" VlcOption="{StaticResource VlcOptions}" 
                       EndBehavior="Nothing" Stretch="Uniform">
            <wpf:VlcPlayer.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Play/Pause" Command="{x:Static cmd:VideoPlayerCommands.PausePlay}" >
                        <MenuItem.Icon>
                            <Image/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Stop" Command="{x:Static cmd:VideoPlayerCommands.Stop}">
                        <MenuItem.Icon>
                            <Image/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Next" Command="{x:Static cmd:VideoPlayerCommands.Next}">
                        <MenuItem.Icon>
                            <Image/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Previous" Command="{x:Static cmd:VideoPlayerCommands.Previous}">
                        <MenuItem.Icon>
                            <Image/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <Separator/>
                    <MenuItem Header="Audio">
                        <MenuItem Header="Audio Tracks" MenuItem.SubmenuOpened="MenuItem_SubmenuOpened"
                              ItemsSource="{Binding AudioTracks}">
                            <MenuItem.ItemContainerStyle>
                                <Style TargetType="{x:Type MenuItem}">
                                    <Setter Property="Command" Value="{Binding DataContext.SelectedAudioTrackCommand, 
                                    RelativeSource={RelativeSource AncestorType={x:Type Window}}}"/>
                                    <Setter Property="CommandParameter" Value="{Binding}"/>
                                    <Setter Property="IsCheckable" Value="True"/>
                                    <Setter Property="IsChecked" Value="{Binding IsActive,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
                                    <EventSetter Event="MenuItem.SubmenuOpened" Handler="MenuItem_SubmenuOpened"/>
                                </Style>
                            </MenuItem.ItemContainerStyle>

                            <MenuItem.Icon>
                                <Image/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <Separator/>
                        <MenuItem Header="Increase Vol"  Command="{x:Static cmd:VideoPlayerCommands.VolUp}"/>
                        <MenuItem Header="Decrease Vol"  Command="{x:Static cmd:VideoPlayerCommands.VolDown}"/>
                        <MenuItem Header="Mute"  Command="{x:Static cmd:VideoPlayerCommands.Mute}"/>
                    </MenuItem>
                    
                    <MenuItem Header="Video">
                        <MenuItem Header="Video Tracks" MenuItem.SubmenuOpened="MenuItem_SubmenuOpened"
                              ItemsSource="{Binding VideoTracks}">
                            <MenuItem.ItemContainerStyle>
                                <Style TargetType="{x:Type MenuItem}">
                                    <Setter Property="Command" Value="{Binding DataContext.SelectedVideoTrackCommand, 
                                    RelativeSource={RelativeSource AncestorType={x:Type Window}}}"/>
                                    <Setter Property="CommandParameter" Value="{Binding}"/>
                                    <Setter Property="IsCheckable" Value="True"/>
                                    <Setter Property="IsChecked" Value="{Binding IsActive,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,
                                    Converter={StaticResource TrackListConverter}}"/>
                                </Style>
                            </MenuItem.ItemContainerStyle>

                            <MenuItem.Icon>
                                <Image/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="FullScreen" Command="{x:Static 
                                            cmd:VideoPlayerCommands.FullScreen}">
                            <MenuItem.Icon>
                                <Image/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem.Icon>
                            <Image/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Subtitle" >
                        <MenuItem Header="Add Subtitle File"  Command="{x:Static cmd:VideoPlayerCommands.AddSubFile}"/>
                        <MenuItem Header="Sub tracks" IsSubmenuOpen="True" MenuItem.SubmenuOpened="MenuItem_SubmenuOpened" ItemsSource="{Binding SubtitleTitleCollection,UpdateSourceTrigger=PropertyChanged}">
                            <MenuItem.ItemContainerStyle>
                                <Style TargetType="{x:Type MenuItem}">
                                    <Setter Property="Command" Value="{x:Static cmd:VideoPlayerCommands.SelectedSub}" />
                                    <Setter Property="CommandParameter" Value="{Binding}" />
                                    <Setter Property="IsCheckable" Value="True"/>
                                    <Setter Property="IsChecked" Value="{Binding IsSelected,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
                                    <Setter Property="HeaderTemplate">
                                        <Setter.Value>
                                            <DataTemplate>
                                                <TextBlock MaxWidth="200" Text="{Binding}" TextTrimming="WordEllipsis"/>
                                            </DataTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </MenuItem.ItemContainerStyle>
                        </MenuItem>
                    </MenuItem>
                    <Separator/>
                    
                    <MenuItem Header="TopMost" IsCheckable="True"
                  Command="{x:Static cmd:VideoPlayerCommands.TopMost}">
                        <!--<MenuItem.Icon>
                <Image/>
            </MenuItem.Icon>-->
                    </MenuItem>
                    <Separator/>
                   
                    <MenuItem Header="PlayList" Command="{x:Static cmd:VideoPlayerCommands.PlayList}" >
                        <MenuItem.Icon>
                            <Image/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <Separator/>
                    <MenuItem Header="Allow AutoResize" IsCheckable="True" IsChecked="True"
                  Command="{x:Static cmd:VideoPlayerCommands.ResizeMediaAlways}"/>

                </ContextMenu>
            </wpf:VlcPlayer.ContextMenu>
        </wpf:VlcPlayer>

        <VideoPlayer:SubtitleMediaController  VerticalAlignment="Stretch" x:Name="videoplayer">
        </VideoPlayer:SubtitleMediaController>

        <Border x:Name="WindowsTab" VerticalAlignment="Top" 
                sw:WindowDragBehavior.LeftMouseButtonDrag="{Binding
        RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                >
            <Border.Background>
                <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox"
                                     StartPoint="0.5,0">
                    <GradientStop Color="Transparent"/>
                    <GradientStop Color="#7F000000"/>
                </LinearGradientBrush>
            </Border.Background>
            <DockPanel LastChildFill="True" Background="Transparent" x:Name="WindowsTabDock">
                <Button HorizontalAlignment="Left" VerticalAlignment="Top" 
                          DockPanel.Dock="Left" Margin="10" 
                          Width="32" >
                    <Button.Style>
                        <Style TargetType="Button" >
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Button">
                                        <Border  SnapsToDevicePixels="True" 
                                                                x:Name="border" 
                                                                Width="{TemplateBinding Width}" 
                                                                Height="{TemplateBinding Height}">
                                            <Image x:Name="contentPresenter" Margin="0" 
                                                   SnapsToDevicePixels="True"
                                 Source="/VirtualizingListView;component/Resources/Images/video-player.png"  />
                                        </Border>

                                        <ControlTemplate.Triggers>
                                           
                                            <Trigger Property="IsDefaulted" Value="true">
                                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                            </Trigger>
                                            <Trigger Property="IsMouseOver" Value="true">
                                                <Setter Property="Opacity" Value="1"  TargetName="contentPresenter"/>
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="true">
                                                <Setter Property="LayoutTransform" TargetName="contentPresenter">
                                                    <Setter.Value>
                                                        <ScaleTransform ScaleX=".8" ScaleY="0.8"/>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="false">
                                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.3"/>
                                                <!--<Setter Property="Background" TargetName="border" Value="#FF18170D"/>
                                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>-->
                                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Button.Style>
                </Button>
                <DockPanel Grid.Column="3" DockPanel.Dock="Right" Margin="0,0,5,0" Background="Transparent">
                    <Button DockPanel.Dock="Right" Width="40" ToolTip="Close" Height="32" 
                            Command="{StaticResource CloseCommand}" 
                            CommandParameter="{Binding RelativeSource=
                        {RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource CloseStyle}">
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="Foreground" Value="White"/>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter Property="Focusable" Value="False"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button  DockPanel.Dock="Left" Height="32"  Width="40" ToolTip="Minimize"  Command="{StaticResource MinimizeCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource minbtn}">
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="Focusable" Value="False"/>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button Background="Transparent" DockPanel.Dock="Right" 
                            Width="40" Height="32" Style="{StaticResource normbtn}"  
                            Command="{StaticResource MaximizeCommand}" 
                            CommandParameter="{Binding RelativeSource
                        ={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}">
                    </Button>
                </DockPanel>
                <TextBlock  Name="TitleName"  FontSize="13" 
                                    util:MediaControlExtension.WindowsTitleBoard="True"
                                    Padding="3" Foreground="White" TextTrimming="CharacterEllipsis" 
                                    Background="Transparent" Height="20"/>
            </DockPanel>
          
            <Border.Style>
                <Style>
                    <Style.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Value="True"  Property="util:MediaControlExtension.AnimateWindowsTab"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard x:Name="Current3">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:.2"  To="1" Storyboard.TargetProperty="Opacity"/>
                                        <!--<ObjectAnimationUsingKeyFrames BeginTime="0:0:0" Duration="0:0:1" Storyboard.TargetProperty="Visibility">
                                        <DiscreteObjectKeyFrame KeyTime="0">
                                            <DiscreteObjectKeyFrame.Value>
                                                <Visibility >Collapsed</Visibility>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>-->
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard >
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:1" To="0" Storyboard.TargetProperty="Opacity"/>
                                        <!--<ObjectAnimationUsingKeyFrames Duration="0:0:5" Storyboard.TargetProperty="Visibility">
                                        <DiscreteObjectKeyFrame KeyTime="2">
                                            <DiscreteObjectKeyFrame.Value>
                                                <Visibility>Visible</Visibility>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>-->
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
        </Border>

        <Button DockPanel.Dock="Right"  Width="40" Height="30"  Visibility="{Binding FullScreenBtn}"  
                HorizontalAlignment="Right" ToolTip="Close"   VerticalAlignment="Top" 
                Command="{StaticResource CloseCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}">
            <Button.Style>
                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource CloseStyle}">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="Red"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
       
    </Grid>
    
</Window>
