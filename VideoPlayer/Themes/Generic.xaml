<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:util="clr-namespace:Common.Util;assembly=Common"
    xmlns:cmd="clr-namespace:Common.ApplicationCommands;assembly=Common"
    xmlns:local="clr-namespace:VideoPlayer">

    <local:VolumeTextConverter x:Key="VolumeTextConverter"/>
   
    <Style TargetType="{x:Type local:MovieTitle_Tab}">
        <Setter Property="TextBlock.FontSize" Value="12"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:MovieTitle_Tab}">
                    <StackPanel Orientation="Vertical" Margin="0,2" Opacity="{TemplateBinding Opacity}"
                                Width="{TemplateBinding Width}" 
                                Height="{TemplateBinding Height}"  
                               
                                Background="{TemplateBinding Background}">
                        <TextBlock Visibility="{Binding ShowOtherText,FallbackValue=Collasped}" 
                                   Text="{Binding MovieText,FallbackValue='---'}"  
                                   TextTrimming="CharacterEllipsis"
                                    Padding="{TemplateBinding Padding}" />
                        <!--<TextBlock x:Name="tbmarqueecheck" Visibility="{Binding IstbmarqueeVisible}" Text="{Binding MovieTitleText,FallbackValue=''}"  
                                   FontStyle="Italic" TextTrimming="CharacterEllipsis"  Padding="3" />-->
                        <local:MarqueeTextBlock x:Name="tbmarquee" TextTrimming="CharacterEllipsis" 
                                                Width="{TemplateBinding Width}" 
                                       Text="{Binding MovieTitleText,FallbackValue='-Movie Title-'}"  
                                     Padding="{TemplateBinding Padding}"/>
                        <!--<Canvas  ClipToBounds="True" x:Name="tbmarqueeCanvas" Width="{TemplateBinding Width}"  Height="23"
                                 >
                            
                        </Canvas>-->
                        
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:VolumeControl}">
        <Setter Property="TextBlock.FontSize" Value="12"/>
        <Setter Property="TextBlock.FontWeight" Value="Bold"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:VolumeControl}">
                    <StackPanel Height="{TemplateBinding Height}" Orientation="Horizontal" Opacity="{TemplateBinding Opacity}"
                               Width="{TemplateBinding Width}" HorizontalAlignment="Center" 
                                VerticalAlignment="Center">
                        <DockPanel x:Name="textonly" Background="Transparent" Width="120" >
                            <TextBlock x:Name="tb" Opacity="0.7" TextAlignment="Center" Text="{Binding ElementName=volslider,Path=Value, Converter={StaticResource VolumeTextConverter}}"/>
                        </DockPanel>
                        <DockPanel x:Name="showbtn" Visibility="Visible" Width="120" 
                                   Background="Transparent">
                            <Button Command="{Binding Mute,Mode=TwoWay}" Width="24">
                                <Button.Style>
                                    <Style TargetType="Button" >
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="Button">
                                                    <Border CornerRadius="16" SnapsToDevicePixels="True" x:Name="border"  Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">

                                                        <Image Opacity=".7" x:Name="contentPresenter" Margin="2" Source="/VirtualizingListView;component/Resources/Images/sound-icone-4732-32.png" />

                                                    </Border>

                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsDefaulted" Value="true">
                                                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                                        </Trigger>
                                                        <Trigger Property="IsMouseOver" Value="true">
                                                            <Setter Property="Opacity" TargetName="contentPresenter" Value="1"/>
                                                        </Trigger>
                                                        <Trigger Property="IsPressed" Value="true">
                                                            <Setter Property="LayoutTransform" TargetName="contentPresenter">
                                                                <Setter.Value>
                                                                    <ScaleTransform ScaleX=".8" ScaleY="0.8"/>
                                                                </Setter.Value>
                                                            </Setter>
                                                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                                                        </Trigger>
                                                        <Trigger Property="IsEnabled" Value="false">
                                                            <Setter Property="Opacity" TargetName="contentPresenter" Value=".3"/>
                                                            <!--<Setter Property="Background" TargetName="border" Value="#FF18170D"/>
                                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>-->
                                                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Button.Style>
                            </Button>
                            <Slider Margin="2" Style="{StaticResource SliderStyle1}" Value="50" 
                                    x:Name="volslider" Maximum="100" Cursor="Hand"
                                    SmallChange="0.1"/>
                        </DockPanel>
                    </StackPanel>

                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Opacity" TargetName="tb" Value="1"/>
                        </Trigger>-->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="textonly" Duration="0:0:0.2" To="0" 
                                                         Storyboard.TargetProperty="Width" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="textonly" Duration="0:0:0.2" To="120" 
                                                         Storyboard.TargetProperty="Width" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <!--<Setter TargetName="textonly" Property="Visibility" Value="Collapsed"/>-->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type util:ProgressSlider}">
        <Setter Property="AutoToolTipPrecision" Value="2"/>
        <Setter Property="ToolTipService.BetweenShowDelay" Value="0"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="0"/>
        <Setter Property="ToolTipService.ShowDuration" Value="20000"/>
        <Setter Property="IsEnabled" Value="True"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
    </Style>
    
    <ContextMenu x:Key="VideoContextMenu">
        <MenuItem Header="Play/Pause" Command="{x:Static cmd:VideoPlayerCommands.PausePlay}" >
            <MenuItem.Icon>
                <Image/>
            </MenuItem.Icon>
        </MenuItem>
        <MenuItem Header="Stop" Command="{x:Static cmd:VideoPlayerCommands.Stop}">
            <MenuItem.Icon>
                <Image/>
            </MenuItem.Icon>
        </MenuItem>
            <Separator/>
        <MenuItem Header="Next" Command="{x:Static cmd:VideoPlayerCommands.Next}">
            <MenuItem.Icon>
                <Image/>
            </MenuItem.Icon>
        </MenuItem>
        <MenuItem Header="Previous" Command="{x:Static cmd:VideoPlayerCommands.Previous}">
            <MenuItem.Icon>
                <Image/>
            </MenuItem.Icon>
        </MenuItem>
        <MenuItem Header="TopMost" IsCheckable="True"
                  Command="{x:Static cmd:VideoPlayerCommands.TopMost}">
            <!--<MenuItem.Icon>
                <Image/>
            </MenuItem.Icon>-->
        </MenuItem>
            <Separator/>
        <MenuItem Header="Volume">
            <MenuItem Header="Up"  Command="{x:Static cmd:VideoPlayerCommands.VolUp}"/>
            <MenuItem Header="Down"  Command="{x:Static cmd:VideoPlayerCommands.VolDown}"/>
            <MenuItem Header="Mute"  Command="{x:Static cmd:VideoPlayerCommands.Mute}"/>
        </MenuItem>

        <MenuItem Header="Subtitle">
            <MenuItem Header="Disable Subtitle" IsCheckable="True"
                      CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}}" 
                      Command="{x:Static cmd:VideoPlayerCommands.DisableSubtitle}">

            </MenuItem>
            <Separator/>
            <MenuItem Header="Subtitle Files" ItemsSource="{Binding SubtitleTitleCollection}" >
                <MenuItem.ItemContainerStyle>
                    <Style TargetType="{x:Type MenuItem}">
                        <Setter Property="Command" Value="{x:Static cmd:VideoPlayerCommands.SelectedSub}" />
                        <Setter Property="CommandParameter" Value="{Binding}" />
                        <Setter Property="IsCheckable" Value="True"/>
                        <Setter Property="IsChecked" Value="{Binding IsSelected}"/>
                        <Setter Property="HeaderTemplate">
                            <Setter.Value>
                                <DataTemplate>
                                    <TextBlock MaxWidth="200" Text="{Binding}" TextTrimming="WordEllipsis"/>
                                </DataTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </MenuItem.ItemContainerStyle>
            </MenuItem>
        </MenuItem>
        
        <MenuItem Header="PlayList" Command="{x:Static cmd:VideoPlayerCommands.PlayList}" >
            <MenuItem.Icon>
                <Image/>
            </MenuItem.Icon>
        </MenuItem>
        <!--<MenuItem Header="FullScreen" Command="{x:Static 
        cmd:VideoPlayerCommands.FullScreen}">
            <MenuItem.Icon>
                <Image/>
            </MenuItem.Icon>
        </MenuItem>-->
    </ContextMenu>

   
   
</ResourceDictionary>
